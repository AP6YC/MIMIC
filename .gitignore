# -----------------------------------------------------------------------------
#
# Document: .gitignore
#
# Author: Sasha Petrenko <sap625@mst.edu>
# Advisor: Dr. Donald Wunsch <dwunsch@mst.edu>
# Description:
#
#   This is a .gitignore file. The purpose of this document is to define
#   regular expressions for files to be ignored in your git repo. Its usage is
#   as follows:
#
# 1. Comments are ignored and created by an octothorpe # (yes, that  is what it
#    is called) at the start of the line.
# 2. Empty newlines and whitespace are ignored as well.
# 3. Each new line defines a separate regular expression (regex) that follows
#    globbing patterns. A good tutorial for this is at:
#
#    https://www.atlassian.com/git/tutorials/saving-changes/gitignore
#
#   Here are some simple samples:
#
#   *.file_type     -   ignores a file type everywhere
#   my_folder/      -   ignores my_folder everywhere
#   my_folder/*     -   ignores the contents of my_folder
#   !my_folder/file -   makes an exception for my_folder/file
#
#   The following is a sample ignore document for common use cases. Feel free
#   to use it at your discretion, and add entries specific to you!
#
#   NOTE 1: Make sure to either edit this document or remove names that you
#           want to use.
#   NOTE 2: If you have a file/folder already being tracked in git before you
#           ignore it, it will continue to be tracked by git. You will have to
#           delete that file/folder before it will be truly ignored.
#
# -----------------------------------------------------------------------------

# Project ignores
results/*
!results/.gitkeep

# IDE ignores
.vs/
.vscode/

# Cluster (Forge/Foundry) ignores
*gmon.out

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
